"use strict";(self.webpackChunkknight_tour=self.webpackChunkknight_tour||[]).push([[826],{917:(n,e,t)=>{var o=t(379),r=t.n(o),i=t(795),A=t.n(i),a=t(569),s=t.n(a),l=t(565),c=t.n(l),d=t(216),E=t.n(d),u=t(589),p=t.n(u),h=t(735),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=A(),m.insertStyleElement=E(),r()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;var C=t(426),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=A(),g.insertStyleElement=E(),r()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals;const f=t.p+"src/images/chess-knight..svg",b=t.p+"src/images/move-self..mp3",v=t.p+"src/images/volume-high..svg",B=document.querySelector(".volume"),y=document.querySelector(".volume-off"),w=document.querySelector(".tour-end"),x=new Audio;x.muted=!0,x.src=b;const k=new Image;k.src=v;const z=new Image;z.src=f,z.alt="Knight Icon",z.style.width="90px",z.style.height="90px",z.addEventListener("click",(n=>n.stopPropagation())),z.draggable=!0;let S=null;k.addEventListener("click",(()=>{k.remove(),B.appendChild(y),x.muted=!0})),y.addEventListener("click",(()=>{y.remove(),B.appendChild(k),x.muted=!1}));const M=()=>{x.currentTime=0;const n=x.play();void 0!==n&&n.catch((()=>{}))},I=n=>{z.remove(),n.appendChild(z),S=null,S=()=>n.classList.add("visited"),M()},F=n=>{n.classList.remove("visited")},R=()=>{w.close(),z.style.opacity=""},q=n=>{const e=n.split("").map((n=>parseInt(n,10))),t=new Set,o=(n,e,o)=>{const r=[n[0]+e,n[1]+o];r[0]<=7&&r[0]>=0&&r[1]<=7&&r[1]>=0&&t.add(`${r[0]}${r[1]}`)};return o(e,2,1),o(e,2,-1),o(e,-2,1),o(e,-2,-1),o(e,1,2),o(e,1,-2),o(e,-1,2),o(e,-1,-2),t},T=(n,e,t)=>{const o=e;o.size+=1,o.graph[n]=t,t.forEach((e=>{o.graph[e].add(n)}))},j=function(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(()=>{const n={};for(let e=0;e<=7;e+=1)for(let t=0;t<=7;t+=1)n[`${e}${t}`]=q(`${e}${t}`);return{size:64,graph:n}})(),t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];const o=((n,e)=>{const t=e,o=t.graph[n];return o.forEach((e=>{t.graph[e].delete(n)})),delete t.graph[n],t.size-=1,o})(n,e);if(t.push(n),0===e.size)return t;if(0===o.size)return T(n,e,o),t.pop(),null;let r=[],i=1/0;o.forEach((n=>{const{size:t}=e.graph[n];0===r.length||t<i?(r=[n],i=t):t===i&&r.push(n)}));for(let n=0;n<r.length;n+=1){const o=j(r[n],e,t);if(o)return o}return T(n,e,o),t.pop(),null},U=j;let L=null,G=[];const P=()=>{L=null},Z={},O={placeInitial:n=>(L=n,!0),startTour:()=>{const n=Z[L];if(n)return n;const e=U(L);return Z[L]=e,e},initializeBoard:n=>{let e=0,t=-1;G=[],n.forEach((n=>{e%8==0&&(G.push([]),t+=1),G[t].push(n),e+=1}))},getSquare:n=>{const[e,t]=n.split("").map((n=>parseInt(n,10)));return G[e][t]},resetInitial:P,clear:()=>{P()},get initialPos(){return L}},Y=document.querySelectorAll(".square"),D=document.querySelector(".start"),N=document.querySelector(".restart"),W=document.querySelector(".random"),$=document.querySelector(".delay"),H=document.querySelector(".pause"),Q=document.querySelector(".previous"),V=document.querySelector(".next");let X,K=parseInt($.value,10),_=!1,J=!1,nn=null,en=1;const tn=()=>{_=!1,X=null,H.textContent="Pause"},on=()=>{_=!0,X=null,H.textContent="Continue",R(),J=!0,N.disabled=!1,Q.disabled=!1,V.disabled=!1,H.disabled=!1},rn=()=>{w.show(),z.style.opacity="0.2",tn(),V.disabled=!0,H.disabled=!0},An=()=>{tn(),R(),en=1,nn=null,J=!1,Q.disabled=!0,N.disabled=!0,V.disabled=!1,H.disabled=!0},an=()=>{O.initialPos&&J&&(An(),I(O.getSquare(O.initialPos)),Y.forEach((n=>{F(n)})))};O.initializeBoard(Y);const sn=n=>{an(),O.placeInitial(n.getAttribute("pos")),I(n)},ln=n=>sn(n.target);Y.forEach((n=>{n.addEventListener("click",ln),n.addEventListener("dragover",(n=>n.preventDefault())),n.addEventListener("drop",(e=>{e.preventDefault(),sn(n)}))}));const cn=n=>{(n=>{z.remove(),n.appendChild(z),S&&S(),S=()=>n.classList.add("visited"),M()})(O.getSquare(n))},dn=()=>{const n=()=>{X===n&&(cn(nn[en]),en+=1,en>=64?rn():dn())};X=n,setTimeout(n,K)},En=()=>!(en>=64||!O.initialPos||(null===nn&&(nn=O.startTour()),on(),cn(nn[en]),en+=1,64===en&&(rn(),1))),un=()=>{En()&&(tn(),dn())};D.addEventListener("click",(()=>{J&&an(),un()})),N.addEventListener("click",an);const pn=()=>{an();let n=Math.floor(8*Math.random()),e=Math.floor(8*Math.random());const t=O.initialPos;if(t){const[o,r]=t.split("").map((n=>Number(n)));for(;n===o&&e===r;)n=Math.floor(8*Math.random()),e=Math.floor(8*Math.random())}sn(O.getSquare(`${n}${e}`))};W.addEventListener("click",pn),$.addEventListener("input",(n=>{const e=parseFloat(n.target.value);e>1e3?($.reportValidity(),K=1e3):K=e})),H.addEventListener("click",(()=>{en<=1||en>=64||(_?un():on())})),V.addEventListener("click",En),Q.addEventListener("click",(()=>{en<=1||!O.initialPos||(on(),(()=>{const n=O.getSquare(nn[en-2]);I(n),F(n)})(),en-=1,1===en&&An())})),pn()},735:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const a=A},426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,':root {\n  --hover-brightness: 90%;\n  --active-brightness: 80%;\n}\n\nhtml {\n  box-sizing: border-box;\n  font-family: Roboto, system-ui, "Segoe UI", Helvetica, Arial, sans-serif,\n    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  color: white;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n  padding: 0;\n  margin: 0;\n  border: none;\n}\n\nh1 {\n  /* To override Normalize.css h1 margin */\n  margin: 0;\n}\n\nbody {\n  display: grid;\n  grid-template-columns: auto max-content;\n  overflow: hidden;\n}\n\n.board {\n  height: 100vh;\n  aspect-ratio: 1;\n  display: grid;\n  grid-auto-rows: 1fr;\n  position: relative;\n  user-select: none;\n}\n\n.board-row {\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n}\n\n.square {\n  display: grid;\n  background-color: rgb(240, 217, 181);\n}\n\n.black {\n  background-color: rgb(181, 136, 99);\n}\n\n.user {\n  background-color: rgba(0, 0, 0, 0.9);\n  color: white;\n  padding: 2vw;\n  display: grid;\n  align-content: start;\n  gap: 50px;\n  justify-items: center;\n  position: relative;\n}\n\nbutton:not([disabled]) {\n  cursor: pointer;\n}\n\nbutton {\n  background-color: white;\n  padding: 10px 20px;\n  width: calc(100% - 5vw);\n}\n\n.title {\n  font-size: 50px;\n  text-align: center;\n}\n\n.buttons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  row-gap: 25px;\n  width: 100%;\n  justify-items: center;\n}\n\nbutton:hover:not([disabled]) {\n  filter: brightness(var(--hover-brightness));\n}\nbutton:active:not([disabled]) {\n  filter: brightness(var(--active-brightness));\n}\n\n.delay-wrapper {\n  display: grid;\n  justify-items: center;\n  font-size: 20px;\n  text-align: center;\n}\n\n.delay {\n  padding: 5px 10px;\n  margin-top: 25px;\n  width: 50%;\n}\n\n.knight-icon {\n  height: 100%;\n}\n\n.visited {\n  background-color: red;\n}\n\n.button-wrapper {\n  width: 100%;\n  text-align: center;\n}\n\n.volume {\n  text-align: right;\n  position: absolute;\n  right: 1vw;\n  bottom: 1vw;\n}\n\n.volume > img {\n  cursor: pointer;\n  width: 5vw;\n  aspect-ratio: 1;\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(105%) contrast(101%);\n}\n\n.volume > img:hover {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(90%) contrast(101%);\n}\n\n.volume > img:active {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(80%) contrast(101%);\n}\n\n.tour-end[open] {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: transparent;\n  font-size: calc(28px + 0.1vw);\n  color: rgb(20, 20, 20);\n  pointer-events: none;\n}\n\n.tour-end:focus {\n  outline: none;\n}\n\n.tour-end > h1 {\n  font-weight: 1000;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,wBAAwB;AAC1B;;AAEA;EACE,sBAAsB;EACtB;4DAC0D;EAC1D,YAAY;AACd;;AAEA;;;EAGE,mBAAmB;EACnB,UAAU;EACV,SAAS;EACT,YAAY;AACd;;AAEA;EACE,wCAAwC;EACxC,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;EACpC,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,oBAAoB;EACpB,SAAS;EACT,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,WAAW;EACX,qBAAqB;AACvB;;AAEA;EACE,2CAA2C;AAC7C;AACA;EACE,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb;;AAEA;EACE,eAAe;EACf,UAAU;EACV,eAAe;EACf;mCACiC;AACnC;;AAEA;EACE;kCACgC;AAClC;;AAEA;EACE;kCACgC;AAClC;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,6BAA6B;EAC7B,6BAA6B;EAC7B,sBAAsB;EACtB,oBAAoB;AACtB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:[':root {\n  --hover-brightness: 90%;\n  --active-brightness: 80%;\n}\n\nhtml {\n  box-sizing: border-box;\n  font-family: Roboto, system-ui, "Segoe UI", Helvetica, Arial, sans-serif,\n    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  color: white;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n  padding: 0;\n  margin: 0;\n  border: none;\n}\n\nh1 {\n  /* To override Normalize.css h1 margin */\n  margin: 0;\n}\n\nbody {\n  display: grid;\n  grid-template-columns: auto max-content;\n  overflow: hidden;\n}\n\n.board {\n  height: 100vh;\n  aspect-ratio: 1;\n  display: grid;\n  grid-auto-rows: 1fr;\n  position: relative;\n  user-select: none;\n}\n\n.board-row {\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n}\n\n.square {\n  display: grid;\n  background-color: rgb(240, 217, 181);\n}\n\n.black {\n  background-color: rgb(181, 136, 99);\n}\n\n.user {\n  background-color: rgba(0, 0, 0, 0.9);\n  color: white;\n  padding: 2vw;\n  display: grid;\n  align-content: start;\n  gap: 50px;\n  justify-items: center;\n  position: relative;\n}\n\nbutton:not([disabled]) {\n  cursor: pointer;\n}\n\nbutton {\n  background-color: white;\n  padding: 10px 20px;\n  width: calc(100% - 5vw);\n}\n\n.title {\n  font-size: 50px;\n  text-align: center;\n}\n\n.buttons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  row-gap: 25px;\n  width: 100%;\n  justify-items: center;\n}\n\nbutton:hover:not([disabled]) {\n  filter: brightness(var(--hover-brightness));\n}\nbutton:active:not([disabled]) {\n  filter: brightness(var(--active-brightness));\n}\n\n.delay-wrapper {\n  display: grid;\n  justify-items: center;\n  font-size: 20px;\n  text-align: center;\n}\n\n.delay {\n  padding: 5px 10px;\n  margin-top: 25px;\n  width: 50%;\n}\n\n.knight-icon {\n  height: 100%;\n}\n\n.visited {\n  background-color: red;\n}\n\n.button-wrapper {\n  width: 100%;\n  text-align: center;\n}\n\n.volume {\n  text-align: right;\n  position: absolute;\n  right: 1vw;\n  bottom: 1vw;\n}\n\n.volume > img {\n  cursor: pointer;\n  width: 5vw;\n  aspect-ratio: 1;\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(105%) contrast(101%);\n}\n\n.volume > img:hover {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(90%) contrast(101%);\n}\n\n.volume > img:active {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(80%) contrast(101%);\n}\n\n.tour-end[open] {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: transparent;\n  font-size: calc(28px + 0.1vw);\n  color: rgb(20, 20, 20);\n  pointer-events: none;\n}\n\n.tour-end:focus {\n  outline: none;\n}\n\n.tour-end > h1 {\n  font-weight: 1000;\n}\n'],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&A[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],l=o.base?s[0]+o.base:s[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var E=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==E)e[E].references++,e[E].updater(u);else{var p=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:p,references:1})}A.push(d)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=o(n,r),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=917)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,