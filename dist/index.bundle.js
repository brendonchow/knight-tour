"use strict";(self.webpackChunkknight_tour=self.webpackChunkknight_tour||[]).push([[826],{917:(n,e,t)=>{var r=t(379),o=t.n(r),i=t(795),A=t.n(i),a=t(569),s=t.n(a),c=t(565),l=t.n(c),E=t(216),d=t.n(E),u=t(589),p=t.n(u),h=t(735),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=s().bind(null,"head"),m.domAPI=A(),m.insertStyleElement=d(),o()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;var g=t(426),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=d(),o()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;const f=t.p+"src/images/chess-knight..svg",b=t.p+"src/images/move-self..mp3",v=t.p+"src/images/volume-high..svg",B=document.querySelector(".volume"),y=document.querySelector(".volume-off"),w=new Audio;w.muted=!0,w.src=b;const x=new Image;x.src=v,x.addEventListener("click",(()=>{x.remove(),B.appendChild(y),w.muted=!0})),y.addEventListener("click",(()=>{y.remove(),B.appendChild(x),w.muted=!1}));const k=new Image;k.src=f,k.addEventListener("click",(n=>n.stopPropagation())),k.draggable=!0;let z=null;const S=()=>{w.currentTime=0;const n=w.play();void 0!==n&&n.catch((()=>{}))},M=n=>{k.remove(),n.appendChild(k),z=null,z=()=>n.classList.add("visited"),S()},I=n=>{n.classList.remove("visited")},F=n=>{const e=n.split("").map((n=>parseInt(n,10))),t=new Set,r=(n,e,r)=>{const o=[n[0]+e,n[1]+r];o[0]<=7&&o[0]>=0&&o[1]<=7&&o[1]>=0&&t.add(`${o[0]}${o[1]}`)};return r(e,2,1),r(e,2,-1),r(e,-2,1),r(e,-2,-1),r(e,1,2),r(e,1,-2),r(e,-1,2),r(e,-1,-2),t},R=(n,e,t)=>{const r=e;r.size+=1,r.graph[n]=t,t.forEach((e=>{r.graph[e].add(n)}))},q=function(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(()=>{const n={};for(let e=0;e<=7;e+=1)for(let t=0;t<=7;t+=1)n[`${e}${t}`]=F(`${e}${t}`);return{size:64,graph:n}})(),t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];const r=((n,e)=>{const t=e,r=t.graph[n];return r.forEach((e=>{t.graph[e].delete(n)})),delete t.graph[n],t.size-=1,r})(n,e);if(t.push(n),0===e.size)return t;if(0===r.size)return R(n,e,r),t.pop(),null;let o=[],i=1/0;r.forEach((n=>{const{size:t}=e.graph[n];0===o.length||t<i?(o=[n],i=t):t===i&&o.push(n)}));for(let n=0;n<o.length;n+=1){const r=q(o[n],e,t);if(r)return r}return R(n,e,r),t.pop(),null},T=q;let U=null,j=[];const L=()=>{U=null},G={},Z={placeInitial:n=>(U=n,!0),startTour:()=>{const n=G[U];if(n)return n;const e=T(U);return G[U]=e,e},initializeBoard:n=>{let e=0,t=-1;j=[],n.forEach((n=>{e%8==0&&(j.push([]),t+=1),j[t].push(n),e+=1}))},getSquare:n=>{const[e,t]=n.split("").map((n=>parseInt(n,10)));return j[e][t]},getInitial:()=>U,resetInitial:L,clear:()=>{L()},get initialPos(){return U}},O=document.querySelectorAll(".square"),P=document.querySelector(".start"),Y=document.querySelector(".restart"),D=document.querySelector(".random"),W=document.querySelector(".delay"),$=document.querySelector(".pause"),N=document.querySelector(".previous"),H=document.querySelector(".next");let V=0,X=!1,_=!1,J=!1,K=null,Q=1,nn=0;const en=()=>{X=!1,nn+=1,$.textContent="Pause"},tn=()=>{X=!0,nn+=1,$.textContent="Continue"},rn=()=>{J=!1,en()},on=()=>{Z.initialPos&&_&&(rn(),Q=1,_=!1,nn+=1,M(Z.getSquare(Z.initialPos)),O.forEach((n=>{I(n)})))};Z.initializeBoard(O);const An=n=>{on(),K=null,Z.placeInitial(n.getAttribute("pos")),M(n)},an=n=>An(n.target);O.forEach((n=>{n.addEventListener("click",an),n.addEventListener("dragover",(n=>n.preventDefault())),n.addEventListener("drop",(n=>{n.preventDefault(),an(n)}))}));const sn=n=>{(n=>{k.remove(),n.appendChild(k),z&&z(),z=()=>n.classList.add("visited"),S()})(Z.getSquare(n))},cn=()=>{nn+=1;const n=nn;setTimeout((()=>{n===nn&&(64===Q?rn():(sn(K[Q]),Q+=1,cn()))}),V)},ln=()=>{Z.initialPos&&(en(),_=!0,J=!0,null===K&&(K=Z.startTour()),cn())};P.addEventListener("click",(()=>{if(_){const n=K;on(),K=n}else on();ln()})),Y.addEventListener("click",on);const En=()=>{on();const n=Math.floor(8*Math.random()),e=Math.floor(8*Math.random()),t=Z.getSquare(`${n}${e}`);An(t)};D.addEventListener("click",En),W.addEventListener("input",(n=>{const e=parseFloat(n.target.value);e>1e3?(W.reportValidity(),V=1e3):V=e}));const dn=()=>{_=!0,tn(),J=!0};$.addEventListener("click",(()=>{J&&(X?ln():tn())})),H.addEventListener("click",(()=>{if(Z.getInitial()&&1===Q)K=Z.startTour();else if(Q>=64)return;dn(),sn(K[Q]),Q+=1,64===Q&&rn()})),N.addEventListener("click",(()=>{Q<=1||(dn(),(()=>{const n=Z.getSquare(K[Q-2]);M(n),I(n)})(),Q-=1,1===Q&&(en(),_=!1,J=!1))})),En()},735:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),i=t(645),A=t.n(i)()(o());A.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const a=A},426:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),i=t(645),A=t.n(i)()(o());A.push([n.id,':root {\n  --hover-brightness: 90%;\n  --active-brightness: 80%;\n}\n\nhtml {\n  box-sizing: border-box;\n  font-family: Roboto, system-ui, "Segoe UI", Helvetica, Arial, sans-serif,\n    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  color: white;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n  padding: 0;\n  margin: 0;\n  border: none;\n}\n\nh1 {\n  /* To override Normalize.css h1 margin */\n  margin: 0;\n}\n\nbody {\n  display: grid;\n  grid-template-columns: auto max-content;\n  overflow: hidden;\n  user-select: none;\n}\n\n.board {\n  height: 100vh;\n  aspect-ratio: 1;\n  display: grid;\n  grid-auto-rows: 1fr;\n}\n\n.board-row {\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n}\n\n.square {\n  display: grid;\n  background-color: rgb(240, 217, 181);\n}\n\n.black {\n  background-color: rgb(181, 136, 99);\n}\n\n.user {\n  background-color: rgba(0, 0, 0, 0.9);\n  color: white;\n  padding: 2vw;\n  display: grid;\n  align-content: start;\n  gap: 50px;\n  justify-items: center;\n  position: relative;\n}\n\nbutton {\n  background-color: white;\n  padding: 10px 20px;\n  cursor: pointer;\n  width: calc(100% - 5vw);\n}\n\n.title {\n  font-size: 50px;\n  text-align: center;\n}\n\n.buttons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  row-gap: 25px;\n  width: 100%;\n  justify-items: center;\n}\n\nbutton:hover {\n  filter: brightness(var(--hover-brightness));\n}\nbutton:active {\n  filter: brightness(var(--active-brightness));\n}\n\n.delay-wrapper {\n  display: grid;\n  justify-items: center;\n  font-size: 20px;\n  text-align: center;\n}\n\n.delay {\n  padding: 5px 10px;\n  margin-top: 25px;\n  width: 50%;\n}\n\n.knight-icon {\n  height: 100%;\n}\n\n.visited {\n  background-color: red;\n}\n\n.button-wrapper {\n  width: 100%;\n  text-align: center;\n}\n\n.volume {\n  text-align: right;\n  position: absolute;\n  right: 1vw;\n  bottom: 1vw;\n}\n\n.volume > img {\n  cursor: pointer;\n  width: 5vw;\n  aspect-ratio: 1;\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(105%) contrast(101%);\n}\n\n.volume > img:hover {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(90%) contrast(101%);\n}\n\n.volume > img:active {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(80%) contrast(101%);\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,wBAAwB;AAC1B;;AAEA;EACE,sBAAsB;EACtB;4DAC0D;EAC1D,YAAY;AACd;;AAEA;;;EAGE,mBAAmB;EACnB,UAAU;EACV,SAAS;EACT,YAAY;AACd;;AAEA;EACE,wCAAwC;EACxC,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;EACpC,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,oBAAoB;EACpB,SAAS;EACT,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,WAAW;EACX,qBAAqB;AACvB;;AAEA;EACE,2CAA2C;AAC7C;AACA;EACE,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb;;AAEA;EACE,eAAe;EACf,UAAU;EACV,eAAe;EACf;mCACiC;AACnC;;AAEA;EACE;kCACgC;AAClC;;AAEA;EACE;kCACgC;AAClC",sourcesContent:[':root {\n  --hover-brightness: 90%;\n  --active-brightness: 80%;\n}\n\nhtml {\n  box-sizing: border-box;\n  font-family: Roboto, system-ui, "Segoe UI", Helvetica, Arial, sans-serif,\n    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  color: white;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n  padding: 0;\n  margin: 0;\n  border: none;\n}\n\nh1 {\n  /* To override Normalize.css h1 margin */\n  margin: 0;\n}\n\nbody {\n  display: grid;\n  grid-template-columns: auto max-content;\n  overflow: hidden;\n  user-select: none;\n}\n\n.board {\n  height: 100vh;\n  aspect-ratio: 1;\n  display: grid;\n  grid-auto-rows: 1fr;\n}\n\n.board-row {\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n}\n\n.square {\n  display: grid;\n  background-color: rgb(240, 217, 181);\n}\n\n.black {\n  background-color: rgb(181, 136, 99);\n}\n\n.user {\n  background-color: rgba(0, 0, 0, 0.9);\n  color: white;\n  padding: 2vw;\n  display: grid;\n  align-content: start;\n  gap: 50px;\n  justify-items: center;\n  position: relative;\n}\n\nbutton {\n  background-color: white;\n  padding: 10px 20px;\n  cursor: pointer;\n  width: calc(100% - 5vw);\n}\n\n.title {\n  font-size: 50px;\n  text-align: center;\n}\n\n.buttons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  row-gap: 25px;\n  width: 100%;\n  justify-items: center;\n}\n\nbutton:hover {\n  filter: brightness(var(--hover-brightness));\n}\nbutton:active {\n  filter: brightness(var(--active-brightness));\n}\n\n.delay-wrapper {\n  display: grid;\n  justify-items: center;\n  font-size: 20px;\n  text-align: center;\n}\n\n.delay {\n  padding: 5px 10px;\n  margin-top: 25px;\n  width: 50%;\n}\n\n.knight-icon {\n  height: 100%;\n}\n\n.visited {\n  background-color: red;\n}\n\n.button-wrapper {\n  width: 100%;\n  text-align: center;\n}\n\n.volume {\n  text-align: right;\n  position: absolute;\n  right: 1vw;\n  bottom: 1vw;\n}\n\n.volume > img {\n  cursor: pointer;\n  width: 5vw;\n  aspect-ratio: 1;\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(105%) contrast(101%);\n}\n\n.volume > img:hover {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(90%) contrast(101%);\n}\n\n.volume > img:active {\n  filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(36deg)\n    brightness(80%) contrast(101%);\n}\n'],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&A[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],c=r.base?s[0]+r.base:s[0],l=i[c]||0,E="".concat(c," ").concat(l);i[c]=l+1;var d=t(E),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var p=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:E,updater:p,references:1})}A.push(E)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=r(n,o),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=917)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,